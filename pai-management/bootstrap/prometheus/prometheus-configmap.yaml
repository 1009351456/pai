# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.






apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
  prometheus.yml: |-
    # Scrape config for cluster components.
    rule_files:
      - "/etc/prometheus-alert/*.rules"
    scrape_configs:
    - job_name: "node_exporter_from_host"
      scrape_interval: "30s"
      static_configs:
      - targets: 
        
        - 10.240.0.6:9100
        
        - 10.240.0.7:9100
        
        - 10.240.0.5:9100
        
    - job_name: 'node_exporter'
      scrape_interval: 30s
      kubernetes_sd_configs:
      - api_server: 'http://10.240.0.6:8080'
        role: node
      # Extract label __address__ inner ip address and replace the port to exporter's port to build target address. 
      # Prometheus will fetch data from target address.
            # Extract label __address__ inner ip address and replace the port to exporter's port to build target address.
      # Prometheus will fetch data from target address.
      scheme: http

      # This TLS & bearer token file config is used to connect to the actual scrape
      # endpoints for cluster components. This is separate to discovery auth
      # configuration because discovery & scraping are two separate concerns in
      # Prometheus. The discovery auth config is automatic if Prometheus runs inside
      # the cluster. Otherwise, more config options have to be provided within the
      # <kubernetes_sd_config>.
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node 
      relabel_configs:
      - source_labels: [__address__]
        regex: '([^:]+)(:\d*)?'
        replacement: '${1}:9100'
        target_label: __address__
    - job_name: 'pai_serivce_exporter'
      scrape_interval: 30s
      kubernetes_sd_configs:
      - api_server: 'http://10.240.0.6:8080'
        role: pod

      scheme: http

      # This TLS & bearer token file config is used to connect to the actual scrape
      # endpoints for cluster components. This is separate to discovery auth
      # configuration because discovery & scraping are two separate concerns in
      # Prometheus. The discovery auth config is automatic if Prometheus runs inside
      # the cluster. Otherwise, more config options have to be provided within the
      # <kubernetes_sd_config>.
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          regex: true
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          regex: (.+)
          action: replace
          target_label: __metrics_path__
        - source_labels: [__meta_kubernetes_pod_host_ip, __meta_kubernetes_pod_annotation_prometheus_io_port]
          regex: ([^;]+);(\d+)
          replacement: ${1}:${2}
          action: replace
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: scraped_from
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: replace
          target_label: pai_service_name
